
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class GUIMain extends javax.swing.JFrame {

    private BufferedImage image1;
    private BufferedImage image2;
    private boolean[][] structuralMatrix;

    public GUIMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        buttonReset = new javax.swing.JButton();
        buttonOpening = new javax.swing.JButton();
        buttonClosing = new javax.swing.JButton();
        buttonErosion = new javax.swing.JButton();
        buttonDilatation = new javax.swing.JButton();
        buttonContouring = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        isBinarization = new javax.swing.JCheckBox();
        isAccumulation = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox25 = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        buttonLoad = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        imageBefore = new ImageScreen();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        buttonSave = new javax.swing.JButton();
        imageAfter = new ImageScreen();
        jSeparator6 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Przekształcenia morfologiczne obrazu");
        setResizable(false);

        buttonReset.setText("Wyczyść");
        buttonReset.setPreferredSize(new java.awt.Dimension(85, 23));
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        buttonOpening.setText("Otwarcie");
        buttonOpening.setPreferredSize(new java.awt.Dimension(85, 23));
        buttonOpening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOpeningActionPerformed(evt);
            }
        });

        buttonClosing.setText("Zamknięcie");
        buttonClosing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClosingActionPerformed(evt);
            }
        });

        buttonErosion.setText("Erozja");
        buttonErosion.setPreferredSize(new java.awt.Dimension(85, 23));
        buttonErosion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonErosionActionPerformed(evt);
            }
        });

        buttonDilatation.setText("Dylatacja");
        buttonDilatation.setPreferredSize(new java.awt.Dimension(85, 23));
        buttonDilatation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDilatationActionPerformed(evt);
            }
        });

        buttonContouring.setText("Konturowanie");
        buttonContouring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonContouringActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Filtry");

        isBinarization.setText("Filtry binarne");

        isAccumulation.setText("Nakładaj filtry");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Element strukturalny");

        jPanel1.setLayout(new java.awt.GridLayout(5, 5));
        jPanel1.add(jCheckBox1);
        jPanel1.add(jCheckBox2);
        jPanel1.add(jCheckBox3);
        jPanel1.add(jCheckBox4);
        jPanel1.add(jCheckBox5);
        jPanel1.add(jCheckBox6);

        jCheckBox7.setSelected(true);
        jPanel1.add(jCheckBox7);

        jCheckBox8.setSelected(true);
        jPanel1.add(jCheckBox8);

        jCheckBox9.setSelected(true);
        jPanel1.add(jCheckBox9);
        jPanel1.add(jCheckBox10);
        jPanel1.add(jCheckBox11);

        jCheckBox12.setSelected(true);
        jPanel1.add(jCheckBox12);

        jCheckBox13.setSelected(true);
        jCheckBox13.setEnabled(false);
        jCheckBox13.setHideActionText(true);
        jPanel1.add(jCheckBox13);

        jCheckBox14.setSelected(true);
        jPanel1.add(jCheckBox14);
        jPanel1.add(jCheckBox15);
        jPanel1.add(jCheckBox16);

        jCheckBox17.setSelected(true);
        jPanel1.add(jCheckBox17);

        jCheckBox18.setSelected(true);
        jPanel1.add(jCheckBox18);

        jCheckBox19.setSelected(true);
        jPanel1.add(jCheckBox19);
        jPanel1.add(jCheckBox20);
        jPanel1.add(jCheckBox21);
        jPanel1.add(jCheckBox22);
        jPanel1.add(jCheckBox23);
        jPanel1.add(jCheckBox24);
        jPanel1.add(jCheckBox25);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(isAccumulation, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isBinarization, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonOpening, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonErosion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonDilatation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(buttonClosing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonContouring, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonErosion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDilatation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonClosing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonOpening, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonContouring)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(isBinarization)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(isAccumulation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        buttonLoad.setText("Wczytaj obraz");
        buttonLoad.setPreferredSize(new java.awt.Dimension(110, 23));
        buttonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(buttonLoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonLoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout imageBeforeLayout = new javax.swing.GroupLayout(imageBefore);
        imageBefore.setLayout(imageBeforeLayout);
        imageBeforeLayout.setHorizontalGroup(
            imageBeforeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        imageBeforeLayout.setVerticalGroup(
            imageBeforeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        buttonSave.setText("Zapisz obraz");
        buttonSave.setPreferredSize(new java.awt.Dimension(110, 23));
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout imageAfterLayout = new javax.swing.GroupLayout(imageAfter);
        imageAfter.setLayout(imageAfterLayout);
        imageAfterLayout.setHorizontalGroup(
            imageAfterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        imageAfterLayout.setVerticalGroup(
            imageAfterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(imageBefore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imageAfter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(imageBefore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imageAfter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoadActionPerformed
        final JFileChooser fileChooser = new JFileChooser("./images/");
        fileChooser.setDialogTitle("Wybierz jakiś obraz");
        fileChooser.setFileFilter(new ImageExtensionsFileFilter());
        
        int chooserAnswer = fileChooser.showDialog(imageBefore, "Wybierz");
        
        if (chooserAnswer == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(new JFrame(), "Nie wybrano obrazu.", "Brak pliku", JOptionPane.INFORMATION_MESSAGE);
        }
        
        if (chooserAnswer == JFileChooser.ERROR_OPTION) {
            JOptionPane.showMessageDialog(new JFrame("Brak pliku"), "Błąd przy wyborze obrazu.", "Błąd", JOptionPane.ERROR_MESSAGE);
        }
        
        if (chooserAnswer == JFileChooser.APPROVE_OPTION) {
            loadImage(fileChooser.getSelectedFile());
        }
    }//GEN-LAST:event_buttonLoadActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        final JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Wybierz obraz");
        
        int chooserAnswer = fileChooser.showDialog(imageBefore, "Zapisz");
        
        if (chooserAnswer == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(new JFrame(), "Obraz nie będzie zapisany.", "Anulowano", JOptionPane.INFORMATION_MESSAGE);
        }
        
        if (chooserAnswer == JFileChooser.ERROR_OPTION) {
            JOptionPane.showMessageDialog(new JFrame("Brak pliku"), "Błąd przy wyborze obrazu.", "Błąd", JOptionPane.ERROR_MESSAGE);
        }
        
        if (chooserAnswer == JFileChooser.APPROVE_OPTION) {
            saveImage(fileChooser.getSelectedFile());
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonErosionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonErosionActionPerformed
        refreshStructuralMatrix();
        BufferedImage tmp;
        
        if (isAccumulation.isSelected()) {
            tmp = image2;
        } else {
            tmp = image1;
        }
        
        if (isBinarization.isSelected()) {
            tmp = Filters.binarization(tmp);
        }
        
        image2 = Filters.erosion(tmp, structuralMatrix);
        
        refreshImage();
    }//GEN-LAST:event_buttonErosionActionPerformed

    private void buttonDilatationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDilatationActionPerformed
        refreshStructuralMatrix();
        BufferedImage newImage;
        
        if (isAccumulation.isSelected()) {
            newImage = image2;
        } else {
            newImage = image1;
        }
        
        if (isBinarization.isSelected()) {
            newImage = Filters.binarization(newImage);
        }
        
        image2 = Filters.dilatation(newImage, structuralMatrix);
        
        refreshImage();
    }//GEN-LAST:event_buttonDilatationActionPerformed

    private void buttonClosingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClosingActionPerformed
        refreshStructuralMatrix();
        BufferedImage newImage;

        if (isAccumulation.isSelected()) {
            newImage = image2;
        } else {
            newImage = image1;
        }

        if (isBinarization.isSelected()) {
            newImage = Filters.binarization(newImage);
        }

        image2 = Filters.dilatation(newImage, structuralMatrix);
        image2 = Filters.erosion(image2, structuralMatrix);

        refreshImage();
    }//GEN-LAST:event_buttonClosingActionPerformed

    private void buttonOpeningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOpeningActionPerformed
        refreshStructuralMatrix();
        BufferedImage newImage;

        if (isAccumulation.isSelected()) {
            newImage = image2;
        } else {
            newImage = image1;
        }

        if (isBinarization.isSelected()) {
            newImage = Filters.binarization(newImage);
        }

        image2 = Filters.erosion(newImage, structuralMatrix);
        image2 = Filters.dilatation(image2, structuralMatrix);

        refreshImage();
    }//GEN-LAST:event_buttonOpeningActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        image2 = image1;
        
        refreshImage();
    }//GEN-LAST:event_buttonResetActionPerformed

    private void buttonContouringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonContouringActionPerformed
        refreshStructuralMatrix();
        BufferedImage newImage;
        
        if (isAccumulation.isSelected()) {
            newImage = image2;
        } else {
            newImage = image1;
        }
        
        if (isBinarization.isSelected()) {
            newImage = Filters.binarization(newImage);
        }
        
        image2 = Filters.contouring(newImage, structuralMatrix);
        
        refreshImage();
    }//GEN-LAST:event_buttonContouringActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUIMain window = new GUIMain();
                window.setLocationRelativeTo(null);
                window.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClosing;
    private javax.swing.JButton buttonContouring;
    private javax.swing.JButton buttonDilatation;
    private javax.swing.JButton buttonErosion;
    private javax.swing.JButton buttonLoad;
    private javax.swing.JButton buttonOpening;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSave;
    private ImageScreen imageAfter;
    private ImageScreen imageBefore;
    private javax.swing.JCheckBox isAccumulation;
    private javax.swing.JCheckBox isBinarization;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    // End of variables declaration//GEN-END:variables

    private void loadImage(File imageFile) {
        try {
            this.image1 = ImageIO.read(imageFile);
            BufferedImage newImage = scaleImage(this.image1, imageBefore);
            imageBefore.setImage(newImage);
            imageBefore.repaint();

            this.image2 = this.image1;
            newImage = scaleImage(this.image2, imageAfter);
            imageAfter.setImage(newImage);
            imageAfter.repaint();
        } catch (IOException ex) {
        }
    }

    private void saveImage(File selectedFile) {
        try {
            ImageIO.write(image2, "jpg", new File(selectedFile.getPath() + ".jpg"));
        } catch (IOException ex) {
            Logger.getLogger(GUIMain.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void refreshImage() {
        BufferedImage newImage = scaleImage(image2, imageAfter);

        imageAfter.setImage(newImage);
        imageAfter.repaint();
    }

    private BufferedImage scaleImage(BufferedImage image, JPanel panel) {
        double scale = 1.0 * image.getWidth() / panel.getWidth();
        if (1.0 * image.getHeight() / panel.getHeight() > scale) {
            scale = 1.0 * image.getHeight() / panel.getHeight();
        }

        Image scaledInstance = image.getScaledInstance((int) (image.getWidth() / scale), (int) (image.getHeight() / scale), Image.SCALE_DEFAULT);
        BufferedImage newImage = new BufferedImage(scaledInstance.getWidth(null), scaledInstance.getHeight(null), BufferedImage.TYPE_INT_ARGB);
        Graphics2D graphics = newImage.createGraphics();
        graphics.drawImage(scaledInstance, 0, 0, null);
        graphics.dispose();

        return newImage;
    }

    private void refreshStructuralMatrix() {
        structuralMatrix = new boolean[5][5];

        structuralMatrix[0][0] = jCheckBox1.isSelected();
        structuralMatrix[0][1] = jCheckBox2.isSelected();
        structuralMatrix[0][2] = jCheckBox3.isSelected();
        structuralMatrix[0][3] = jCheckBox4.isSelected();
        structuralMatrix[0][4] = jCheckBox5.isSelected();
        structuralMatrix[1][0] = jCheckBox6.isSelected();
        structuralMatrix[1][1] = jCheckBox7.isSelected();
        structuralMatrix[1][2] = jCheckBox8.isSelected();
        structuralMatrix[1][3] = jCheckBox9.isSelected();
        structuralMatrix[1][4] = jCheckBox10.isSelected();
        structuralMatrix[2][0] = jCheckBox11.isSelected();
        structuralMatrix[2][1] = jCheckBox12.isSelected();
        structuralMatrix[2][2] = jCheckBox13.isSelected();
        structuralMatrix[2][3] = jCheckBox14.isSelected();
        structuralMatrix[2][4] = jCheckBox15.isSelected();
        structuralMatrix[3][0] = jCheckBox16.isSelected();
        structuralMatrix[3][1] = jCheckBox17.isSelected();
        structuralMatrix[3][2] = jCheckBox18.isSelected();
        structuralMatrix[3][3] = jCheckBox19.isSelected();
        structuralMatrix[3][4] = jCheckBox20.isSelected();
        structuralMatrix[4][0] = jCheckBox21.isSelected();
        structuralMatrix[4][1] = jCheckBox22.isSelected();
        structuralMatrix[4][2] = jCheckBox23.isSelected();
        structuralMatrix[4][3] = jCheckBox24.isSelected();
        structuralMatrix[4][4] = jCheckBox25.isSelected();
    }
}
